import java.io.*;
import java.util.*;
class Node{
    int data;
    Node right,left;
    Node(int data){
        this.data=data;
        this.right=this.left=null;
    }
}
public class Main {
    public static Node insert(Node root,int key){
        if(root==null) return new Node(key);
        if(key>root.data) {
            root.right=insert(root.right,key);
        }
        {
            root.left=insert(root.left,key);
        }
        return root;
    }
    
     public static Node trimBST(Node root,int a,int b){
         if(root==null) return null;
         if(root.data<a) return trimBST(root.right,a,b);
         if(root.data>b) return trimBST(root.left,a,b);
         root.left=trimBST(root.left,a,b);
         root.right=trimBST(root.right,a,b);
         return root;
     }

     static void printTrimBST(Node root,int m,int n){
         if(root==null) return;
         System.out.println(root.data);
         printTrimBST(root.left,m,n);
         printTrimBST(root.right,m,);
     }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int T=sc.nextInt();
        while(T-->0){
            int N=sc.nextInt();
            int L=sc.nextInt();
            int R=sc.nextInt();
            Node root=null;
            for(int i=0;i<N;i++){
                int val=sc.nextInt();
                root=insert(root,val);
            }
           preOrder(root); 
        }
        
    }
}
