class Solution {
public int countSymmetricIntegers(int low, int high) {
    int count = 0;
    
    for (int num = low; num <= high; num++) {
        if (isSymmetric(num)) {
            count++;
        }
    }
    
    return count;
}

public boolean isSymmetric(int num) {
    String numStr = Integer.toString(num);
    int n = numStr.length();
    
    // Check if the number of digits is even
    if (n % 2 != 0) {
        return false;
    }
    
    // Calculate the sum of the first half of the digits
    int sumFirstHalf = 0;
    for (int i = 0; i < n / 2; i++) {
        sumFirstHalf += numStr.charAt(i) - '0';
    }
    int sumSecondHalf=0;
    for(int i=n/2;i<n;i++){
        sumSecondHalf+=numStr.charAt(i) - '0';
    }
    return sumFirstHalf==sumSecondHalf;
}
}
