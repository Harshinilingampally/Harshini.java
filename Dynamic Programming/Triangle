class Solution {
    Integer [][] dp;
    public int helperFunction(List<List<Integer>> triangle,int length,int row,int column){
        if(row==length-1) return triangle.get(row).get(column);
        if(dp[row][column]!=null) return dp[row][column];
        int rightdiagonal=triangle.get(row).get(column)+helperFunction(triangle,length,row+1,column+1);
        int down=triangle.get(row).get(column)+helperFunction(triangle,length,row+1,column);
       return dp[row][column]=Math.min(rightdiagonal,down);
    }
    public int minimumTotal(List<List<Integer>> triangle) {
        int length=triangle.size();
        dp=new Integer[length][length];
        return helperFunction(triangle,length,0,0);
    }
}
