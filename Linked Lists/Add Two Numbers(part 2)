class Solution {
    public static ListNode reverse(ListNode node){
        ListNode pre = null , temp ;
        while(node != null){
            temp = node.next;
            node.next = pre;
            pre = node;
            node  = temp;
        }
        return pre;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummyHead=new ListNode(0);
        ListNode tail=dummyHead;
        int carry=0;
        l1=reverse(l1);
         l2=reverse(l2);
        while(l1!=null || l2!=null || carry!=0){
         int digit1=(l1!=null) ? l1.val:0;
         int digit2=(l2!=null) ? l2.val:0;
         int sum=digit1+digit2+carry;
         int newdigit=sum%10;
         carry=sum/10;
        ListNode newNode=new ListNode(newdigit);
        tail.next=newNode;
        tail=tail.next;
        l1=(l1!=null) ? l1.next:null;
        l2=(l2!=null) ? l2.next:null;
        }
        ListNode result=dummyHead.next;
        dummyHead.next=null;
        result=reverse(result);
        return result;
    }
}
