/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
     private ListNode reverseList(ListNode head){
        ListNode current = head;
        ListNode previous = null;
        ListNode next = null;
        while(current != null){
            next = current.next;
            current.next = previous;
            previous = current;
            current = next;
        }
        return previous;
     }
    public ListNode removeNodes(ListNode head) {
        head=reverseList(head);
        ListNode temp1=head;
        ListNode temp2=head.next;
         
        while(temp2!=null){
            if(temp1.val>temp2.val){
                temp1.next=temp2.next;
            }
            else{
                temp1=temp2;
            }

            temp2=temp2.next;
        }
        
         head=reverseList(head);
        return head;
        
    }
}
