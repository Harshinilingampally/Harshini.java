
/*
static final int ALPHABET_SIZE = 26;

    // trie node
    static class TrieNode {
        TrieNode[] children = new TrieNode[ALPHABET_SIZE];

        // isEndOfWord is true if the node represents
        // end of a word
        boolean isEndOfWord;

        TrieNode() {
            isEndOfWord = false;
            for (int i = 0; i < ALPHABET_SIZE; i++) children[i] = null;
        }
    };
*/
static void insert(TrieNode root, String key) 
{
    TrieNode curNode=root;
    for(int i=0;i<key.length();i++){
        char ch=key.charAt(i);
        if(curNode.children[ch-'a']==null){
            TrieNode newNode=new TrieNode();
            curNode.children[ch-'a']=newNode;
        }
        curNode=curNode.children[ch-'a'];
    }
    curNode.isEndOfWord=true;
    
}
//Function to use TRIE data structure and search the given string.
static boolean search(TrieNode root, String key)
{
    TrieNode curNode=root;
    for(int i=0;i<key.length();i++){
        char ch=key.charAt(i);
        if(curNode.children[ch-'a']==null){
            return false;
        }
        curNode=curNode.children[ch-'a'];
    }
    return curNode.isEndOfWord;
}
