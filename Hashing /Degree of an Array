class Solution {
    public int findShortestSubArray(int[] nums) {
        HashMap<Integer, Integer> hm1 = new HashMap<Integer, Integer>();
        HashMap<Integer, Integer> hm2 = new HashMap<Integer, Integer>();
        int count = 0;
        int res = 0;
        for (int i = 0; i < nums.length; i++) {
            if (hm1.containsKey(nums[i])) {
                hm1.put(nums[i], hm1.get(nums[i]) + 1);
            } else {
                hm1.put(nums[i], 1);
                hm2.put(nums[i], i);
            }
            if (hm1.get(nums[i]) > count) {
                count = hm1.get(nums[i]);
                res = i - hm2.get(nums[i]) + 1;
            } else if (hm1.get(nums[i]) == count) {
                res = Math.min(res, i - hm2.get(nums[i]) + 1);
            }
        }
        return res;
    }
}
