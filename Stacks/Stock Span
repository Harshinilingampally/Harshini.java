/***
You are given a series of daily price quotes for a stock and you need to calculate the span of the stock’s price for each day. The span Si of the stock’s price on the current day i is defined as the maximum number of consecutive days just before the current day[including the current day], on which the price of the stock is less than or equal to its price on the current day.
Input Format

The first line of input contains T - the number of test cases. It is followed by 2T lines, the first line contains N - the size of the array. The second line contains N integers - the elements of the array, ith element denotes the stock price on ith day.

Output Format
For each test case, print a space-separated Stock Span Array, separated by a new line.
***/

import java.io.*;
import java.util.*;
class Stack{
    int top;
    int [] arr;
    Stack(int N){
        arr=new int[N];
        top=-1;
    }
    void push(int x){
        arr[++top]=x;
    }
    int pop(){
       return arr[top--];
    }
    int getTop(){
        return arr[top];
    }
}
public class Main {
    public static void main(String[] args) {
     Scanner sc=new Scanner(System.in);
     int T=sc.nextInt();
     while(T-->0){
         int N=sc.nextInt();
         int [] arr=new int[N];
         for(int i=0;i<N;i++){
             arr[i]=sc.nextInt();
         }
        Stack stack=new Stack(N);
        int [] span=new int[N];
        stack.push(0);
        span[0]=1;
        for(int i=1;i<N;i++){
           while(stack.top!=-1 && arr[i] >=arr[stack.getTop()]){
               stack.pop();
           }
           span[i]=(stack.top==-1)?(i+1):(i-stack.getTop());
           stack.push(i);
        }
       for(int items:span){
           System.out.print(items+" ");
       }
      System.out.println();

     }

    }
}
